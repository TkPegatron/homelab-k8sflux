---
# yaml-language-server: $schema=https://kubernetes-schemas.zynthovian.xyz/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    controllers:
      main:
        type: deployment

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.0.700@sha256:9ae40655d519479d4d70a8d67f929142a0fc2d10df0b75a0947ee3a6c8da7f53
            env:
              TZ: America/Detroit
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 80
              SONARR__LOG_LEVEL: info
              SONARR__THEME: dark
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

    defaultPodOptions:
      annotations:
        vpn.home.arpa/tunnel: "ivpn"
      labels:
        vpn.home.arpa/tunnel: "ivpn"
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      downloads:
        enabled: true
        type: nfs
        server: 'xenia.int.zynthovian.xyz'
        path: '/srv/media/Downloads'
        globalMounts:
          - path: '/downloads'
      media:
        enabled: true
        type: 'nfs'
        server: 'xenia.int.zynthovian.xyz'
        path: '/srv/media/Media'
        globalMounts:
          - path: '/media'

    service:
      main:
        labels:
          vpn.home.arpa/tunnel: 'ivpn'
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        tls:
          - hosts:
              - &host "{{ .Release.Name }}.zynthovian.xyz"
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
