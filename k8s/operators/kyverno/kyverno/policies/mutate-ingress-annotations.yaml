---
# yaml-language-server: $schema=https://kubernetes-schemas.zynthovian.xyz/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-auth-annotations
  annotations:
    policies.kyverno.io/title: Ingress Auth Annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates nginx auth annotations on ingresses. When
      the `auth.home.arpa/enabled` annotation is `true` it
      applies the nginx auth annotations for use with Authelia.
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                auth.home.arpa/enabled: "true"
      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): |-
                http://authelia.default.svc.cluster.local/api/verify
              +(nginx.ingress.kubernetes.io/auth-signin): |-
                https://auth.zynthovian.xyz?rm=$request_method
              +(nginx.ingress.kubernetes.io/auth-response-headers): |-
                Remote-User,Remote-Name,Remote-Groups,Remote-Email
              +(nginx.ingress.kubernetes.io/auth-snippet): |
                proxy_set_header X-Forwarded-Method $request_method;
---
# yaml-language-server: $schema=https://kubernetes-schemas.zynthovian.xyz/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-external-dns-annotations
  annotations:
    policies.kyverno.io/title: Ingress External-DNS Annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates annotations on ingresses.
      When the `external-dns.home.arpa/public` annotation
      is set to true, it applies external-dns annotations
      pointing the resultant name records to the public ip address.
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: external-dns
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                external-dns.home.arpa/public: "true"
      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
        patchStrategicMerge:
          metadata:
            annotations:
              +(external-dns.alpha.kubernetes.io/target): |-
                ipv4.zynthovian.xyz
---
# yaml-language-server: $schema=https://kubernetes-schemas.zynthovian.xyz/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-whitelist-annotations
  annotations:
    policies.kyverno.io/title: Ingress Whitelist Annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates annotations on ingresses. When
      the `external-dns.home.arpa/public` annotation is not
      set to true, it applies nginx "whitelist" annotations which
      restrict access to hosts within rfc1918 addresses..
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: whitelist
      match:
        any:
          - resources:
              kinds: ["Ingress"]
      exclude:
        any:
          - resources:
              annotations:
                external-dns.home.arpa/public: "true"
      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/whitelist-source-range): |-
                10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
