---
- name: Cluster Rook-Ceph
  hosts:
    - master
  become: true
  gather_facts: true
  any_errors_fatal: true
  tasks:

    - name: delete /var/openebs/
      ansible.builtin.file:
        path: /var/openebs/
        state: absent

    - name: Reset Ceph Config # noqa: ignore-errors
      ignore_errors: true
      block:
        - name: Delete (/var/lib/rook)
          ansible.builtin.file:
            state: absent
            path: /var/lib/rook
        - name: Delete (/dev/mapper/ceph-*) # noqa: no-changed-when
          ansible.builtin.shell: |
            set -o pipefail
            ls /dev/mapper/ceph-* | xargs -I% -- dmsetup remove_all --force % || true
        - name: Delete (/dev/ceph-*) # noqa: no-changed-when
          ansible.builtin.command: rm -rf /dev/ceph-*
        - name: Delete (/dev/mapper/ceph--*) # noqa: no-changed-when
          ansible.builtin.command: rm -rf /dev/mapper/ceph--*

    - name: Wipe Disk Topology
      ignore_errors: true
      when: ceph_disks | default([]) | length > 0
      block:
        - name: Wipe (sgdisk) # noqa: no-changed-when
          ansible.builtin.command: "sgdisk --zap-all {{ item.path }}"
          loop: "{{ ceph_disks }}"
        - name: Wipe (dd) # noqa: no-changed-when
          ansible.builtin.command: "dd if=/dev/zero of={{ item.path }} bs=1M count=200 oflag=direct,dsync"
          loop: "{{ ceph_disks }}"
        - name: Wipe (partprobe) # noqa: no-changed-when
          ansible.builtin.command: "partprobe {{ item.path }}"
          loop: "{{ ceph_disks }}"
        - name: Wipe (blkdiscard) # noqa: no-changed-when
          ansible.builtin.command: "blkdiscard {{ item.path }}"
          loop: "{{ ceph_disks }}"
        - name: Wipe (partprobe) # noqa: no-changed-when
          ansible.builtin.command: "partprobe {{ item.path }}"
          loop: "{{ ceph_disks }}"
        - name: Reboot Nodes
          ansible.builtin.reboot:

    - name: Rebuild Disk Topology
      ignore_errors: true
      when: luks_secondaries | default([]) | length > 0
      block:
        - name: CryptSetup LuksFormat/LuksAddKey # noqa: no-changed-when
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
                printf "{{ luks_admin_password }}" > ./admin_passphrase
                cryptsetup luksFormat {{ item.path }} ./admin_passphrase
                cryptsetup luksAddKey \
                  --key-file ./admin_passphrase {{ item.path }} /etc/cryptokey.bin
                rm ./admin_passphrase
          loop: "{{ luks_secondaries }}"
        - name: CryptSetup luksOpen # noqa: no-changed-when
          ansible.builtin.command: "cryptsetup luksOpen {{ item.path }} --key-file /etc/cryptokey.bin {{ item.name }}"
          loop: "{{ luks_secondaries }}"
        - name: Remove name from Crypttab # noqa: no-changed-when
          ansible.builtin.command: "sed -s '/{{ item.name }}/d' -i /etc/crypttab"
          loop: "{{ luks_secondaries }}"
        - name: Add device to crypttab
          ansible.builtin.lineinfile:
            line: "{{ item.name }} {{ item.path }} /etc/cryptokey.bin discard"
            path: /etc/crypttab
          loop: "{{ luks_secondaries }}"
        - name: Create LVM PV # noqa: no-changed-when
          ansible.builtin.command: pvcreate /dev/mapper/{{ item.name }}
          loop: "{{ luks_secondaries }}"
        - name: Create LVM VG # noqa: no-changed-when
          ansible.builtin.command: vgcreate {{ item.name }} /dev/mapper/{{ item.name }}
          loop: "{{ luks_secondaries }}"
        - name: Create LVM LV # noqa: no-changed-when
          ansible.builtin.command: lvcreate -l 100%FREE -n osd {{ item.name }}
          loop: "{{ luks_secondaries }}"
