---
- name: "Prepare hosts to become cluter members"
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  tasks:

    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Packages
      block:
        - name: Packages | Install EPEL
          ansible.builtin.dnf:
            name: epel-release
            state: present
            update_cache: true
        - name: Packages | Install required packages
          ansible.builtin.dnf:
            name: "{{ system_packages | default([]) }}"
            state: present
            update_cache: true

    - name: Network Configuration
      block:
        - name: Network Configuration | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Network Configuration | Update hosts
          ansible.builtin.copy:
            dest: /etc/hosts
            content: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}

              # The following lines are desirable for IPv6 capable hosts
              ::1     localhost ip6-localhost ip6-loopback
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
            mode: preserve
        # https://github.com/cilium/cilium/issues/18706
        #- name: Network Configuration | Cilium (1)
        #  ansible.builtin.lineinfile:
        #    dest: /etc/systemd/networkd.conf
        #    regexp: ManageForeignRoutingPolicyRules
        #    line: ManageForeignRoutingPolicyRules=no
        #- name: Network Configuration | Cilium (2)
        #  ansible.builtin.lineinfile:
        #    dest: /etc/systemd/networkd.conf
        #    regexp: ManageForeignRoutes
        #    line: ManageForeignRoutes=no
        #- name: Network Configuration | Disable firewalld
        #  ansible.builtin.systemd:
        #    service: firewalld.service
        #    enabled: false
        #    masked: true
        #    state: stopped

    - name: System Configuration
      notify: Reboot
      block:
        - name: System Configuration | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true
        - name: System Configuration | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
        - name: System Configuration | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: "0644"
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
        - name: System Configuration | Tune sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              fs.inotify.max_queued_events: 65536
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 8192
        - name: System Configuration | Disable zram swap
          ansible.builtin.dnf:
            name: zram-generator-defaults
            state: absent
          when: ansible_facts['distribution'] in ['Fedora', 'Rocky']

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
