---
- name: "Prepare hosts to become cluter members"
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  tasks:
    - name: Networking
      block:
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}
    - name: Packages | RHEL
      when: ansible_facts['distribution'] in ['Fedora', 'Rocky']
      block:
        - name: Packages | Install EPEL
          ansible.builtin.dnf:
            name: epel-release
            state: present
            update_cache: true
        - name: Packages | Install required packages
          ansible.builtin.dnf:
            name: "{{ system_packages | default([]) }}"
            state: present
            update_cache: true
        - name: Packages | Remove leaf packages
          ansible.builtin.dnf:
            autoremove: true

    - name: System Configuration (1)
      block:
        #- name: Configure Users
        #  ansible.builtin.include_role:
        #    name: userspace
        #    public: true
        - name: System Configuration (1) | Disable firewalld | Fedora
          ansible.builtin.systemd:
            service: firewalld.service
            enabled: false
            masked: true
            state: stopped
          when: ansible_facts['distribution'] in ['Fedora', 'Rocky']
        - name: System Configuration (1) | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true

    - name: System Configuration (2)
      notify: Reboot
      block:
        - name: System Configuration (2) | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: "0644"
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Tune sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 512
        - name: System Configuration (2) | Disable swap | Fedora
          ansible.builtin.dnf:
            name: zram-generator-defaults
            state: absent
          when: ansible_facts['distribution'] in ['Fedora', 'Rocky']
        - name: System Configuration (2) | Disable swap at runtime | Ubuntu
          ansible.builtin.command: swapoff -a
          when:
            - ansible_facts['distribution'] == 'Ubuntu'
            - ansible_swaptotal_mb > 0

    - name: System Configuration (3) | Network Bound Disk Encryption
      block:
        - name: System Configuration (3) | NBDE | Rotate LUKS Keys
          loop: "{{ nbde_client_bindings }}"
          no_log: true
          register: luks_rotate_shell
          changed_when: luks_rotate_shell.stdout == "changed"
          ansible.builtin.shell:
            cmd: |
              if ! ((echo "{{ item.encryption_password }}") | cryptsetup --verbose open --test-passphrase {{ item.device }}); then
                cryptsetup luksKillSlot {{ item.device }} {{ item.slot }} || true
                printf "{{ item.encryption_password }}" > ./new_passphrase
                printf "{{ luks_admin_password }}" > ./admin_passphrase
                cryptsetup luksAddKey \
                  --key-file ./admin_passphrase \
                  --key-slot={{ item.slot }} \
                  {{ item.device }} ./new_passphrase
                rm ./new_passphrase ./admin_passphrase
                echo "changed"; exit
              fi
              echo "unchanged"; exit
        # If this starts to fail you may need to purge the tokens from the headder
        #  for i in {0..6}; do sudo cryptsetup token remove --token-id $i /dev/sda3 ;done
        - name: System Configuration (4) | NBDE | Execute Client Role
          ansible.builtin.include_role:
            name: linux-system-roles.nbde_client
            public: true
          no_log: false

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
